//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.17929
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace WpfApplication1.Michelin {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceMeteoSoap", Namespace="http://tempuri.org/")]
    public partial class WebServiceMeteo : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetTemperatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcheterVoitureOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebServiceMeteo() {
            this.Url = global::WpfApplication1.Properties.Settings.Default.WpfApplication1_Michelin_WebServiceMeteo;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTemperatureCompletedEventHandler GetTemperatureCompleted;
        
        /// <remarks/>
        public event AcheterVoitureCompletedEventHandler AcheterVoitureCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTemperature", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTemperature(string ville) {
            object[] results = this.Invoke("GetTemperature", new object[] {
                        ville});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemperatureAsync(string ville) {
            this.GetTemperatureAsync(ville, null);
        }
        
        /// <remarks/>
        public void GetTemperatureAsync(string ville, object userState) {
            if ((this.GetTemperatureOperationCompleted == null)) {
                this.GetTemperatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemperatureOperationCompleted);
            }
            this.InvokeAsync("GetTemperature", new object[] {
                        ville}, this.GetTemperatureOperationCompleted, userState);
        }
        
        private void OnGetTemperatureOperationCompleted(object arg) {
            if ((this.GetTemperatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemperatureCompleted(this, new GetTemperatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AcheterVoiture", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Voiture AcheterVoiture() {
            object[] results = this.Invoke("AcheterVoiture", new object[0]);
            return ((Voiture)(results[0]));
        }
        
        /// <remarks/>
        public void AcheterVoitureAsync() {
            this.AcheterVoitureAsync(null);
        }
        
        /// <remarks/>
        public void AcheterVoitureAsync(object userState) {
            if ((this.AcheterVoitureOperationCompleted == null)) {
                this.AcheterVoitureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcheterVoitureOperationCompleted);
            }
            this.InvokeAsync("AcheterVoiture", new object[0], this.AcheterVoitureOperationCompleted, userState);
        }
        
        private void OnAcheterVoitureOperationCompleted(object arg) {
            if ((this.AcheterVoitureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcheterVoitureCompleted(this, new AcheterVoitureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Voiture {
        
        private int prixField;
        
        private string marqueField;
        
        /// <remarks/>
        public int Prix {
            get {
                return this.prixField;
            }
            set {
                this.prixField = value;
            }
        }
        
        /// <remarks/>
        public string Marque {
            get {
                return this.marqueField;
            }
            set {
                this.marqueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTemperatureCompletedEventHandler(object sender, GetTemperatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemperatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemperatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AcheterVoitureCompletedEventHandler(object sender, AcheterVoitureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcheterVoitureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcheterVoitureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Voiture Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Voiture)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591